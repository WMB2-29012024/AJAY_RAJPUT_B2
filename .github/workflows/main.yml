name: Get Branch Name, Commit Hash, Commits, and Changes

on:
  push:
    branches:
      - '*'

jobs:
  get-branch-name-commit-hash-commits-and-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Log start of script
        run: echo "GitHub Actions script is starting..."

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get branch name
        id: branch
        run: echo "::set-output name=branch_name::$(echo $GITHUB_REF | cut -d/ -f3-)"

      - name: Get latest commit hash
        id: commit
        run: |
          echo "::set-output name=commit_hash::$(git log -1 --pretty=format:'%h')"
          echo "::set-output name=commit_author::$(git log -1 --pretty=format:'%an')"

      - name: Make API call and Log branch name, commit hash, and GitHub ref
        run: |
          # Constructing the JSON payload for the API call
          api_url="${{ secrets.SERVER_API_URL }}"

          questionIdResponse=$(curl --location "$api_url" \
          --header 'Content-Type: application/json' \
          --data '{"query":"query GetQuestionIdByBranchName($branchName: String) { getQuestionIdByBranchName(branchName: $branchName) { questionId response { message status } }}","variables":{"branchName":"'"${{ steps.branch.outputs.branch_name }}"'"}}')

          # Extracting questionId field value using jq
          questionId=$(echo "$questionIdResponse" | jq -r '.data.getQuestionIdByBranchName.questionId')

          echo "Question ID: $questionId"
          
          # Making the API call using curl
          response=$(curl --location "$api_url" \
          --header 'Content-Type: application/json' \
          --data '{"query":"mutation Mutation($input: UserGithubDataInputType) {\n  upsertUserGithubData(input: $input) {    response {      status      message    }    data {      commitHash      branchRef      branchName     userId   commitAuthor    questionId  }  }}","variables":{"input":{"commitHash":"'"${{ steps.commit.outputs.commit_hash }}"'","branchRef": "'"$GITHUB_REF"'","branchName": "'"${{ steps.branch.outputs.branch_name }}"'","userId": "'"${{ secrets.USER_ID }}"'","commitAuthor": "'"${{ steps.commit.outputs.commit_author }}"'","questionId": "'"$questionId"'"}}}')
          
          # Logging the API response and branch details
          echo "API Response: $response"
          echo "Branch Name: ${{ steps.branch.outputs.branch_name }}, Commit Hash: ${{ steps.commit.outputs.commit_hash }}, Commit Author: ${{ steps.commit.outputs.commit_author }}, GitHub Ref: $GITHUB_REF, userId: ${{ secrets.USER_ID }}"